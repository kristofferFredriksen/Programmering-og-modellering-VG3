{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Modellering oppgaver"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Oppgave 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from pylab import *\n",
    "\n",
    "# Startbetingelser\n",
    "N = 157759 # anntall individer populasjon\n",
    "a = 4/N #Smitterate\n",
    "b = 3.5 # bedringsrate\n",
    "tid = 48 # tid uker\n",
    "\n",
    "I = 3 # Smittede\n",
    "S = N - I # mulige smittede, hvem som ikke har vært syke enda\n",
    "R = 0 # recovered, vært syke nå friske. Restituert \n",
    "\n",
    "syke = [I]\n",
    "mulige = [S]\n",
    "friske = [R]\n",
    "t = [tid]\n",
    "\n",
    "for i in range (tid+1):\n",
    "    S = S - a*S*I\n",
    "    I = I + a * S * I - b * I\n",
    "    R = R + b * I\n",
    "    syke.append (I)\n",
    "    mulige.append (S)\n",
    "    friske.append (R)\n",
    "    t.append (i)\n",
    "    \n",
    "plot (t, syke, label=\"Syke\")\n",
    "plot (t, mulige, label=\"Mottakelige\")\n",
    "plot (t, friske, label=\"Friske\")\n",
    "legend ()\n",
    "show ()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
